/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * ModuleTabs.java
 *
 * Created on Sep 16, 2009, 1:28:21 PM
 */
package marg.gui;

import java.awt.Color;
import marg.gui.plugin.ModulePlugin;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.DefaultListModel;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.SwingUtilities;
import javax.swing.text.BadLocationException;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.TreePath;
import marg.gui.dialogs.AddStatusLimitDialog;
import marg.gui.dialogs.MonitorVariableDialog;
import marg.handlers.XMLClientHandler;
import marg.model.ModuleVariable;
import marg.model.MonitoredVariable;
import marg.model.StatusVariable;
import marg.model.ValueLimit;
import marg.model.XMLClient;
import marg.model.plugin.RawDataPlugin;
import marg.model.plugin.VarDataPlugin;
import marg.util.Log;

/**
 *
 * @author daniel
 */
public class ModuleTabs extends javax.swing.JPanel implements RobotModule, PropertyChangeListener {

    private static final long PLUGIN_UPDATE_INTERVAL = 1000;
    private ArrayList<ModulePlugin> modPlugins = new ArrayList<ModulePlugin>();
    private boolean pluginUpdateThreadRunning = false;
    private boolean hasSubscribed = false;
    XMLClientHandler handler;
    VariableTree tree;

    /** Creates new form ModuleTabs */
    public ModuleTabs(String name) {
        this(name, "", 0, false);
    }

    public ModuleTabs(String name, String host, int port, boolean autoConnect) {
        initComponents();
        jList1.setModel(new DefaultListModel());
        this.setName(name);
        hostTF.setText(host);
        if (port != 0) {
            portTF.setText(String.valueOf(port));
        }
        initXMLClient();
        startPluginUpdateThread();
        if (autoConnect) {
            connect();
        }
    }

    private void initXMLClient() {
        handler = new XMLClientHandler(new XMLClient());
        handler.getXMLParser().addParsePlugin(new RawDataPlugin()); //TODO: Should this be done manually here?
        handler.getXMLParser().addParsePlugin(new VarDataPlugin());
    }

    public void addModulePlugin(ModulePlugin modPlugin) {
        modPlugins.add(modPlugin);
        JPanel pluginPanel = modPlugin.getJPanel();
        pluginPanel.setName(modPlugin.getPluginName());
        tabsPN.add(pluginPanel);
        modPlugin.setXMLClientHandler(handler); //Skal have handler f√∏r den kan starte
        modPlugin.startPlugin(); //Plugin startes og kan bruge XMLClientHandler osv.
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPopupMenuVariables = new javax.swing.JPopupMenu();
        jMenuChangeValue = new javax.swing.JMenuItem();
        jMenuAddToStatusTab = new javax.swing.JMenuItem();
        jMenuMonitorVariable = new javax.swing.JMenuItem();
        jPopupMenuStatus = new javax.swing.JPopupMenu();
        jMenuAddLimit = new javax.swing.JMenuItem();
        tabsPN = new javax.swing.JTabbedPane();
        controlTB = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTextArea2 = new javax.swing.JTextArea();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        hostTF = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        portTF = new javax.swing.JTextField();
        jConnectBtn = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        cmdBT = new javax.swing.JButton();
        jCmdComboBox = new javax.swing.JComboBox();
        jLabel6 = new javax.swing.JLabel();
        variablesTB = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTree1 = new javax.swing.JTree();
        jPanel5 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jPanel7 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList();

        jMenuChangeValue.setText("Change Value");
        jMenuChangeValue.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuChangeValueActionPerformed(evt);
            }
        });
        jPopupMenuVariables.add(jMenuChangeValue);

        jMenuAddToStatusTab.setText("Add to Status");
        jMenuAddToStatusTab.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuAddToStatusTabActionPerformed(evt);
            }
        });
        jPopupMenuVariables.add(jMenuAddToStatusTab);

        jMenuMonitorVariable.setText("Monitor Variable");
        jMenuMonitorVariable.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuMonitorVariableActionPerformed(evt);
            }
        });
        jPopupMenuVariables.add(jMenuMonitorVariable);

        jMenuAddLimit.setText("Change Limit Value");
        jMenuAddLimit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuAddLimitActionPerformed(evt);
            }
        });
        jPopupMenuStatus.add(jMenuAddLimit);

        setBackground(new java.awt.Color(180, 180, 233));

        tabsPN.setBackground(new java.awt.Color(180, 180, 233));
        tabsPN.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        controlTB.setBackground(new java.awt.Color(180, 180, 233));

        jScrollPane3.setBackground(new java.awt.Color(233, 233, 237));
        jScrollPane3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Raw data", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("DejaVu Sans", 1, 12))); // NOI18N

        jTextArea2.setBackground(new java.awt.Color(253, 253, 253));
        jTextArea2.setColumns(20);
        jTextArea2.setRows(5);
        jScrollPane3.setViewportView(jTextArea2);

        jPanel1.setBackground(new java.awt.Color(233, 233, 237));
        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel1.setBackground(new java.awt.Color(233, 233, 237));
        jLabel1.setFont(new java.awt.Font("DejaVu Sans", 1, 12));
        jLabel1.setText("Connection");

        hostTF.setMinimumSize(new java.awt.Dimension(120, 20));

        jLabel3.setText("Host:");

        jLabel4.setText("Port:");

        jConnectBtn.setText("Connect");
        jConnectBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jConnectBtnActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("DejaVu Sans", 2, 10));
        jLabel5.setText("Write the host and port nr of the module you wish to connect to.");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(hostTF, javax.swing.GroupLayout.DEFAULT_SIZE, 359, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(portTF, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jConnectBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel1)
                    .addComponent(jLabel5))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(8, 8, 8)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(hostTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jConnectBtn)
                    .addComponent(portTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(28, 28, 28))
        );

        jPanel2.setBackground(new java.awt.Color(233, 233, 237));
        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel2.setFont(new java.awt.Font("DejaVu Sans", 1, 12));
        jLabel2.setText("Send Command");

        cmdBT.setText("Send");
        cmdBT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdBTActionPerformed(evt);
            }
        });

        jCmdComboBox.setEditable(true);
        jCmdComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCmdComboBoxActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("DejaVu Sans", 2, 10));
        jLabel6.setText("Write the command you wish to send to the module. Press enter to send.");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jCmdComboBox, 0, 526, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cmdBT, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel6))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(cmdBT)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jCmdComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        javax.swing.GroupLayout controlTBLayout = new javax.swing.GroupLayout(controlTB);
        controlTB.setLayout(controlTBLayout);
        controlTBLayout.setHorizontalGroup(
            controlTBLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(controlTBLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(controlTBLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 627, Short.MAX_VALUE))
                .addContainerGap())
        );
        controlTBLayout.setVerticalGroup(
            controlTBLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(controlTBLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 219, Short.MAX_VALUE)
                .addContainerGap())
        );

        tabsPN.addTab("Control", controlTB);

        variablesTB.setBackground(new java.awt.Color(180, 180, 233));

        jPanel3.setBackground(new java.awt.Color(233, 233, 237));
        jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel8.setFont(new java.awt.Font("DejaVu Sans", 2, 10));
        jLabel8.setText("This is a list of all the variable in this module");

        jLabel7.setFont(new java.awt.Font("DejaVu Sans", 1, 12));
        jLabel7.setText("Variable Tree");

        jButton2.setText("Update");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("DejaVu Sans", 2, 10));
        jLabel11.setText("Update all variables:");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 429, Short.MAX_VALUE)
                        .addComponent(jLabel11))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 266, Short.MAX_VALUE)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jLabel11))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(jButton2))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel4.setBackground(new java.awt.Color(233, 233, 237));
        jPanel4.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        javax.swing.tree.DefaultMutableTreeNode treeNode1 = new javax.swing.tree.DefaultMutableTreeNode("No Connection");
        jTree1.setModel(new javax.swing.tree.DefaultTreeModel(treeNode1));
        jTree1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTree1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTree1);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 603, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 319, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout variablesTBLayout = new javax.swing.GroupLayout(variablesTB);
        variablesTB.setLayout(variablesTBLayout);
        variablesTBLayout.setHorizontalGroup(
            variablesTBLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(variablesTBLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(variablesTBLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        variablesTBLayout.setVerticalGroup(
            variablesTBLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(variablesTBLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        tabsPN.addTab("Variables", variablesTB);

        jPanel5.setBackground(new java.awt.Color(180, 180, 233));

        jPanel6.setBackground(new java.awt.Color(233, 233, 237));
        jPanel6.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel9.setFont(new java.awt.Font("DejaVu Sans", 1, 12));
        jLabel9.setText("Status Variables");

        jLabel10.setFont(new java.awt.Font("DejaVu Sans", 2, 10));
        jLabel10.setText("This is a list of the monitored status variables in this module");

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel9)
                    .addComponent(jLabel10))
                .addContainerGap(331, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel10)
                .addContainerGap(15, Short.MAX_VALUE))
        );

        jPanel7.setBackground(new java.awt.Color(233, 233, 237));
        jPanel7.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jList1.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jList1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jList1MouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jList1);

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 603, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 319, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel7, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel6, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        tabsPN.addTab("Status", jPanel5);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tabsPN, javax.swing.GroupLayout.DEFAULT_SIZE, 656, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tabsPN, javax.swing.GroupLayout.DEFAULT_SIZE, 476, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jConnectBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jConnectBtnActionPerformed
        connect();
    }//GEN-LAST:event_jConnectBtnActionPerformed

    private void cmdBTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdBTActionPerformed
        String cmd = (String) jCmdComboBox.getSelectedItem();
        System.out.println("Cmd: " + cmd);

        if (!cmd.equals("") && !cmd.equals(" ")) {
            //Send Cmd
            handler.sendCmd(cmd);
            jTextArea2.append("\n-> " + cmd);

            //Add to combo-box if needed
            DefaultComboBoxModel model = (DefaultComboBoxModel) jCmdComboBox.getModel();
            int index = model.getIndexOf(cmd);
            if (index == -1) { //new command
                model.insertElementAt(cmd, 0);
            }
            jCmdComboBox.setSelectedItem("");
        }
    }//GEN-LAST:event_cmdBTActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        handler.sendCmd("var allcopy");
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jTree1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTree1MouseClicked
        if (SwingUtilities.isRightMouseButton(evt)) {
            TreePath rightClickedPath = jTree1.getClosestPathForLocation(evt.getX(), evt.getY());
            if (rightClickedPath != null) {
                jTree1.setSelectionPath(rightClickedPath);
                DefaultMutableTreeNode node = (DefaultMutableTreeNode) jTree1.getSelectionPath().getLastPathComponent();
                if (node.isLeaf() && node.getUserObject() instanceof ModuleVariable) {
                    ModuleVariable modVar = (ModuleVariable) node.getUserObject();
                    if (statusVariableExists(modVar)) {
                        jMenuAddToStatusTab.setVisible(false);
                    } else {
                        jMenuAddToStatusTab.setVisible(true);
                    }
                    jPopupMenuVariables.show(jTree1, evt.getX(), evt.getY());
                    Log.GlobalLogger.fine("VarTree: Right-Clicked on " + modVar);
                }
            }
        }
    }//GEN-LAST:event_jTree1MouseClicked

    private void jMenuChangeValueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuChangeValueActionPerformed
        DefaultMutableTreeNode selectedNode = (DefaultMutableTreeNode) jTree1.getSelectionPath().getLastPathComponent();
        if (selectedNode.getUserObject() instanceof ModuleVariable) {
            modifyModuleVariable((ModuleVariable) selectedNode.getUserObject());
        }
    }//GEN-LAST:event_jMenuChangeValueActionPerformed

    private void jCmdComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCmdComboBoxActionPerformed
        if (evt.getActionCommand().equals("comboBoxEdited")) {
            cmdBTActionPerformed(null); //Pushes send
        }
}//GEN-LAST:event_jCmdComboBoxActionPerformed

    private void jMenuAddToStatusTabActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuAddToStatusTabActionPerformed
        DefaultListModel model = (DefaultListModel) jList1.getModel();
        DefaultMutableTreeNode node = (DefaultMutableTreeNode) jTree1.getSelectionPath().getLastPathComponent();
        if (node.isLeaf() && node.getUserObject() instanceof ModuleVariable) {
            ModuleVariable modVar = (ModuleVariable) node.getUserObject();
            StatusVariable statusVar = new StatusVariable(modVar);
            model.addElement(statusVar);
        }
    }//GEN-LAST:event_jMenuAddToStatusTabActionPerformed

    private void jList1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jList1MouseClicked
        if (SwingUtilities.isRightMouseButton(evt)) {
            Object obj = jList1.getSelectedValue();
            if (obj != null) {
                jPopupMenuStatus.show(jList1, evt.getX(), evt.getY());
            }
        }
    }//GEN-LAST:event_jList1MouseClicked

    private void jMenuAddLimitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuAddLimitActionPerformed
        Object obj = jList1.getSelectedValue();
        if (obj != null) {
            StatusVariable statVar = (StatusVariable) obj;
            AddStatusLimitDialog dialog = new AddStatusLimitDialog(null, true, statVar);
            dialog.setLocation(250, 200); //TODO: Un-hardcode location? Works for now.
            dialog.setTitle("Add Value Limit");
            dialog.setVisible(true);
            if (dialog.wasApproved()) {
                ValueLimit limit = dialog.getValueLimit();
                statVar.setLimit(limit);
            }
        }
    }//GEN-LAST:event_jMenuAddLimitActionPerformed

    private void jMenuMonitorVariableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuMonitorVariableActionPerformed
        DefaultMutableTreeNode selectedNode = (DefaultMutableTreeNode) jTree1.getSelectionPath().getLastPathComponent();
        if (selectedNode.getUserObject() instanceof ModuleVariable) {
            MonitorVariableDialog dialog = new MonitorVariableDialog(null, true, (ModuleVariable) selectedNode.getUserObject());
            dialog.setLocation(200, 200);
            dialog.setVisible(true);
            if (dialog.wasApproved()) {
                MonitoredVariable monitoredVar = dialog.getMonitoredVar();
                if (monitoredVar != null) {
                    MainGUIHandler.getInstance().addMonitoredVariable(monitoredVar);
                }
            }
        }
    }//GEN-LAST:event_jMenuMonitorVariableActionPerformed

    private boolean statusVariableExists(ModuleVariable modVar) {
        DefaultListModel model = (DefaultListModel) jList1.getModel();
        for (Object obj : model.toArray()) {
            StatusVariable statVar = (StatusVariable) obj;
            if (statVar.getModuleVar().getVarName().equals(modVar.getVarName())) {
                return true;
            }
        }
        return false;
    }

    private boolean isStatusVariablesCorrect() {
        boolean isCorrect = true;
        DefaultListModel model = (DefaultListModel) jList1.getModel();
        for (Object obj : model.toArray()) {
            StatusVariable statVar = (StatusVariable) obj;
            if (!statVar.isStatusCorrect()) {
                isCorrect = false;
                break;
            }
        }
        return isCorrect;
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cmdBT;
    private javax.swing.JPanel controlTB;
    private javax.swing.JTextField hostTF;
    private javax.swing.JButton jButton2;
    private javax.swing.JComboBox jCmdComboBox;
    private javax.swing.JButton jConnectBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JList jList1;
    private javax.swing.JMenuItem jMenuAddLimit;
    private javax.swing.JMenuItem jMenuAddToStatusTab;
    private javax.swing.JMenuItem jMenuChangeValue;
    private javax.swing.JMenuItem jMenuMonitorVariable;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPopupMenu jPopupMenuStatus;
    private javax.swing.JPopupMenu jPopupMenuVariables;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextArea jTextArea2;
    private javax.swing.JTree jTree1;
    private javax.swing.JTextField portTF;
    private javax.swing.JTabbedPane tabsPN;
    private javax.swing.JPanel variablesTB;
    // End of variables declaration//GEN-END:variables

    public void propertyChange(PropertyChangeEvent evt) {
        if (evt.getPropertyName().equals(RawDataPlugin.SUBSCRIBE_RAWDATA)) {
            newRawData(evt);
        } else if (evt.getPropertyName().equals(VarDataPlugin.SUBSCRIBE_VARDATA)) {
            newVarData(evt);
        }
    }

    private void modifyModuleVariable(ModuleVariable modVar) {
        String newValue = (String) JOptionPane.showInputDialog(this, "Please enter the new value:", modVar.getVarName(), JOptionPane.QUESTION_MESSAGE, null, null, "" + modVar.getValue());
        if (newValue != null && !newValue.equals("")) {
            handler.setVariable(modVar.getVarName(), newValue);
        }
    }

    public static void main(String[] args) {
        JFrame frame = new JFrame("Title");
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        frame.setSize(800, 600);
        ModuleTabs modTabs = new ModuleTabs("RHD Test");
        frame.getContentPane().add(modTabs);
        frame.setVisible(true);
    }

    public Color getModuleStatusColor() {
        boolean isConnected = handler.isConnected();
        if (isConnected) {
            if (isStatusVariablesCorrect()) {
                return Color.GREEN;
            } else {
                return Color.YELLOW;
            }
        } else {
            return Color.RED;
        }
    }

    public String getModuleName() {
        return this.getName();
    }

    private void newRawData(PropertyChangeEvent evt) {
        String newRawData = (String) evt.getNewValue();
        if (jTextArea2.getLineCount() > 1000) {
            try {
                int cutOffset = jTextArea2.getLineStartOffset(500);
                int endOffset = jTextArea2.getLineEndOffset(jTextArea2.getLineCount() - 1);
                jTextArea2.setText(jTextArea2.getText(cutOffset, endOffset - cutOffset));
            } catch (BadLocationException ex) {
                Log.GlobalLogger.info("RawData, Bad Location offset: " + ex.offsetRequested());
            }
        }
        jTextArea2.append(newRawData);
        try {
            int offset = jTextArea2.getLineStartOffset(jTextArea2.getLineCount() - 1);
            jTextArea2.setCaretPosition(offset);
        } catch (BadLocationException ex) {
            Logger.getLogger(ModuleTabs.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void newVarData(PropertyChangeEvent evt) {
        ModuleVariable var = (ModuleVariable) evt.getNewValue();
        tree.updateVarTreeStructure(var);
        tree.updateVarTreeView();
        this.updateStatusListView();
    }

    private void updateStatusListView() {
        jList1.repaint();
    }

    public XMLClientHandler getXMLClientHandler() {
        return handler;
    }

    private void connect() {
        boolean isConnected = handler.connect(hostTF.getText(), Integer.parseInt(portTF.getText()));
        if (isConnected) {
            handler.sendCmd("var allcopy");
        }
        if (!hasSubscribed) {
            handler.addPropertiesChangeListener(this, RawDataPlugin.SUBSCRIBE_RAWDATA, VarDataPlugin.SUBSCRIBE_VARDATA);
            tree = new VariableTree(jTree1, this.getName());
            hasSubscribed = true;
        }
    }

    public void removeModulePlugin(ModulePlugin modPlugin) {
        tabsPN.remove(modPlugin.getJPanel());
        modPlugins.remove(modPlugin);
        modPlugin.stopPlugin();
    }

    public void stopPlugins() {
        for (ModulePlugin plugin : modPlugins) {
            plugin.stopPlugin();
            tabsPN.remove(plugin.getJPanel());
        }
    }

    private void startPluginUpdateThread() {
        pluginUpdateThreadRunning = true;
        Thread t = new Thread(new Runnable() {
            public void run() {
                while (pluginUpdateThreadRunning) {
                    for (ModulePlugin plugin : modPlugins) {
                        plugin.doUpdate();
                    }
                    try {
                        Thread.sleep(PLUGIN_UPDATE_INTERVAL);
                    } catch (InterruptedException ex) {
                        Logger.getLogger(ModuleTabs.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
            }
        });
        t.start();
    }
}
