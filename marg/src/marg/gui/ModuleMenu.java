/*
 * Modules.java
 *
 * Created on 21-09-2009, 08:44:30
 */
package marg.gui;

import java.awt.Color;
import java.awt.Dimension;
import java.awt.GridBagConstraints;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.Collection;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ButtonGroup;
import javax.swing.DefaultListModel;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JToggleButton;
import javax.swing.SwingConstants;
import javax.swing.SwingUtilities;
import marg.config.ControlButton;
import marg.gui.dialogs.AddModuleDialog;
import marg.gui.dialogs.MonitorVariableDialog;
import marg.gui.plugin.ModulePlugin;
import marg.images.ResUtils;
import marg.model.MonitoredVariable;
import marg.util.Log;
import marg.util.PluginManager;

/**
 *
 * @author Kristina
 */
public class ModuleMenu extends javax.swing.JPanel implements Runnable {

    private static final long BUTTON_STATUS_UPDATE_DELAY = 500;
    private int moduleRows = 0;
    private ControlButton startButton;
    private ControlButton pauseButton;
    private ControlButton stopButton;
    private ButtonGroup moduleBtnGroup = new ButtonGroup();
    private ImageIcon greenIcon = ResUtils.getImageIcon("GreenButton20px.gif");
    private ImageIcon yellowIcon = ResUtils.getImageIcon("YellowButton20px.gif");

    ;
    private ImageIcon redIcon = ResUtils.getImageIcon("RedButton20px.gif");

    ;
    private boolean buttonStatusUpdateThreadRunning = false;

    /** Creates new form Modules */
    public ModuleMenu() {
        initComponents();
        MainGUIHandler.getInstance().setModuleMenu(this);
        jListMonitored.setModel(new DefaultListModel());
        startUpdateThread();
    }

    public void addModule(RobotModule module) {
        String buttonName = module.getModuleName();
        MainGUIHandler handler = MainGUIHandler.getInstance();
        handler.addModuleMapping(module);
        handler.addModule((ModuleTabs) module);
        this.addButton(buttonName);
        handler.showModule(module.getModuleName());
    }

    public void addMonitoredVariable(MonitoredVariable monitoredVar) {
        DefaultListModel model = (DefaultListModel) jListMonitored.getModel();
        model.addElement(monitoredVar);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPopupMonitorList = new javax.swing.JPopupMenu();
        jMenuEditPresentation = new javax.swing.JMenuItem();
        jPanel1 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        stopBTN = new javax.swing.JButton();
        pauseBTN = new javax.swing.JButton();
        startBTN = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jModuleButtons = new javax.swing.JPanel();
        jBtnAddPlugin = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jListMonitored = new javax.swing.JList();
        jPanel2 = new javax.swing.JPanel();
        jRobotName = new javax.swing.JLabel();

        jMenuEditPresentation.setText("Change Presentation");
        jMenuEditPresentation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuEditPresentationActionPerformed(evt);
            }
        });
        jPopupMonitorList.add(jMenuEditPresentation);

        jPanel1.setBackground(new java.awt.Color(180, 180, 233));
        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jPanel3.setBackground(new java.awt.Color(233, 233, 237));
        jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        stopBTN.setText("STOP");
        stopBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stopBTNActionPerformed(evt);
            }
        });

        pauseBTN.setText("Pause");
        pauseBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pauseBTNActionPerformed(evt);
            }
        });

        startBTN.setText("Start");
        startBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startBTNActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12));
        jLabel1.setText("Command");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(stopBTN, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(pauseBTN)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(startBTN))
                    .addComponent(jLabel1))
                .addContainerGap(14, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(stopBTN)
                    .addComponent(pauseBTN)
                    .addComponent(startBTN))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel4.setBackground(new java.awt.Color(233, 233, 237));
        jPanel4.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel3.setFont(new java.awt.Font("Tahoma", 2, 11));
        jLabel3.setText("The modules on this robot:");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12));
        jLabel2.setText("Modules");

        jButton1.setText("Add Module");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tahoma", 2, 11));
        jLabel4.setText("If you wish to add a module press this button");

        jScrollPane1.setBackground(new java.awt.Color(233, 233, 237));
        jScrollPane1.setBorder(null);
        jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        jModuleButtons.setBackground(new java.awt.Color(233, 233, 237));
        jModuleButtons.setLayout(new java.awt.GridBagLayout());
        jScrollPane1.setViewportView(jModuleButtons);

        jBtnAddPlugin.setText("Add Plugin");
        jBtnAddPlugin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnAddPluginActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBtnAddPlugin))
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 232, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(jLabel2)
                .addGap(5, 5, 5)
                .addComponent(jLabel3)
                .addGap(1, 1, 1)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 191, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, 23, Short.MAX_VALUE)
                    .addComponent(jBtnAddPlugin))
                .addContainerGap())
        );

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Monitored Variables", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 12))); // NOI18N

        jScrollPane2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jListMonitored.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jListMonitoredMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jListMonitored);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 244, Short.MAX_VALUE)
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 175, Short.MAX_VALUE)
        );

        jPanel2.setBackground(new java.awt.Color(190, 204, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jRobotName.setBackground(new java.awt.Color(255, 255, 255));
        jRobotName.setFont(new java.awt.Font("Tahoma", 1, 18));
        jRobotName.setForeground(new java.awt.Color(50, 100, 133));
        jRobotName.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jRobotName.setText("Loading..");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jRobotName, javax.swing.GroupLayout.DEFAULT_SIZE, 232, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jRobotName)
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        AddModuleDialog dialog = new AddModuleDialog(null, true);
        dialog.setLocation(200, 200); //TODO: Un-hardcode coordinates?
        dialog.setVisible(true);
        dialog.dispose();
        if (dialog.wasApproved()) {
            String moduleName = dialog.getModuleName();
            String host = dialog.getHost();
            int port = dialog.getPort();
            boolean autoConnect = dialog.getAutoConnect();
            if (!moduleName.equals("")) {
                RobotModule module = new ModuleTabs(moduleName, host, port, autoConnect);
                this.addModule(module);
            } else {
                JOptionPane.showMessageDialog(this, "Cannot create a module without a name");
            }
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jBtnAddPluginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnAddPluginActionPerformed
        List<Class> availablePlugins = PluginManager.getInstance().getAvailableModulePlugins();
        String[] pluginNames = new String[availablePlugins.size()];
        for (int i = 0; i < availablePlugins.size(); i++) {
            pluginNames[i] = availablePlugins.get(i).getSimpleName();
        }
        String selectedName = (String) JOptionPane.showInputDialog(null,
                "Choose Plugin", "Add Plugin to active module", JOptionPane.QUESTION_MESSAGE,
                null, pluginNames, null);
        if (selectedName != null) { //Was a plugin chosen?
            for (Class aClass : availablePlugins) { //Find the Class for the chosen plugin
                if (aClass.getSimpleName().equals(selectedName)) {
                    ModuleTabs module = MainGUIHandler.getInstance().getCurrentModule();
                    ModulePlugin plugin = (ModulePlugin) PluginManager.getInstance().getInstanceOfClass(aClass);
                    if (module != null && plugin != null) {
                        module.addModulePlugin(plugin);
                    }
                }
            }
        }

    }//GEN-LAST:event_jBtnAddPluginActionPerformed

    private void stopBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stopBTNActionPerformed
        if (stopButton != null) {
            RobotModule module = MainGUIHandler.getInstance().getModuleByName(stopButton.getModuleName());
            if (module != null) {
                sendCmdThroughModule(module, stopButton.getCommand());
            }
        }
    }//GEN-LAST:event_stopBTNActionPerformed

    private void pauseBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pauseBTNActionPerformed
        if (pauseButton != null) {
            RobotModule module = MainGUIHandler.getInstance().getModuleByName(pauseButton.getModuleName());
            if (module != null) {
                sendCmdThroughModule(module, pauseButton.getCommand());
            }
        }
    }//GEN-LAST:event_pauseBTNActionPerformed

    private void startBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startBTNActionPerformed
        if (startButton != null) {
            RobotModule module = MainGUIHandler.getInstance().getModuleByName(startButton.getModuleName());
            if (module != null) {
                sendCmdThroughModule(module, startButton.getCommand());
            } else {
                Log.GlobalLogger.info("No Module (" + startButton.getModuleName() + ") to send start cmd (" + startButton.getCommand() + ") to");
            }
        } else {
            Log.GlobalLogger.fine("Start Button not configured");
        }
    }//GEN-LAST:event_startBTNActionPerformed

    private void jListMonitoredMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jListMonitoredMouseClicked
        if (SwingUtilities.isRightMouseButton(evt)) {
            jListMonitored.setSelectedIndex(jListMonitored.locationToIndex(evt.getPoint()));
            Object selectedObj = jListMonitored.getSelectedValue();
            if (selectedObj != null) {
                jPopupMonitorList.show(jListMonitored, evt.getX(), evt.getY());
            }
        }
    }//GEN-LAST:event_jListMonitoredMouseClicked

    private void jMenuEditPresentationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuEditPresentationActionPerformed
        Object selectedObj = jListMonitored.getSelectedValue();
        if (selectedObj != null) {
            MonitoredVariable monitoredVar = (MonitoredVariable) selectedObj;
            MonitorVariableDialog dialog = new MonitorVariableDialog(null, true, monitoredVar);
            dialog.setLocation(200, 200);
            dialog.setVisible(true);
            if (dialog.wasApproved()) {
                MonitoredVariable newMonVar = dialog.getMonitoredVar();
                monitoredVar.setPresentation(newMonVar.getPresentation());

            }
            jListMonitored.clearSelection();
        }
    }//GEN-LAST:event_jMenuEditPresentationActionPerformed

    private void sendCmdThroughModule(RobotModule module, String cmd) {
        module.getXMLClientHandler().sendCmd(cmd);
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBtnAddPlugin;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JList jListMonitored;
    private javax.swing.JMenuItem jMenuEditPresentation;
    private javax.swing.JPanel jModuleButtons;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPopupMenu jPopupMonitorList;
    private javax.swing.JLabel jRobotName;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton pauseBTN;
    private javax.swing.JButton startBTN;
    private javax.swing.JButton stopBTN;
    // End of variables declaration//GEN-END:variables

    private synchronized void addButton(String buttonName) {
        marg.util.Log.GlobalLogger.info("Adding a button for: " + buttonName);
        final JToggleButton button = new JToggleButton(buttonName, redIcon);
        MainGUIHandler.getInstance().addButtonMapping(buttonName, button);
        button.setHorizontalAlignment(SwingConstants.LEFT);
        button.setPreferredSize(new Dimension(170, 30));
        button.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                String moduleName = button.getText();
                MainGUIHandler.getInstance().showModule(moduleName);
            }
        });
        GridBagConstraints c = new GridBagConstraints();
        c.gridx = 1;
        c.gridy = ++moduleRows;
        jModuleButtons.add(button, c);
        moduleBtnGroup.add(button);
        moduleBtnGroup.setSelected(button.getModel(), true);
    }

    public void setPauseButton(ControlButton pauseButton) {
        this.pauseButton = pauseButton;
    }

    public void setStartButton(ControlButton startButton) {
        this.startButton = startButton;
    }

    public void setStopButton(ControlButton stopButton) {
        this.stopButton = stopButton;
    }

    public void setRobotName(String robotName) {
        jRobotName.setText(robotName);
    }

    private void startUpdateThread() {
        buttonStatusUpdateThreadRunning = true;
        Thread t = new Thread(this);
        t.start();
    }

    public void run() {
        while (buttonStatusUpdateThreadRunning) {
            Collection<RobotModule> modules = MainGUIHandler.getInstance().getAllModules();
            for (RobotModule module : modules) {
                String moduleName = module.getModuleName();
                Color statusColor = module.getModuleStatusColor();
                JToggleButton moduleButton = MainGUIHandler.getInstance().getMenuButtonByName(moduleName);
                if (moduleButton != null) {
                    if (statusColor == Color.GREEN) {
                        moduleButton.setIcon(greenIcon);
                    } else if (statusColor == Color.YELLOW) {
                        moduleButton.setIcon(yellowIcon);
                    } else if (statusColor == Color.RED) {
                        moduleButton.setIcon(redIcon);
                    }
                }
            }
            updateMonitoredList();
            try {
                Thread.sleep(BUTTON_STATUS_UPDATE_DELAY);
            } catch (InterruptedException ex) {
                Logger.getLogger(ModuleMenu.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }

    private void updateMonitoredList() {
        SwingUtilities.invokeLater(new Runnable() {
            public void run() {
                jListMonitored.repaint();
            }
        });
    }
}
