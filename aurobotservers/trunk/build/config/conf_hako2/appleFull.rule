<?xml version="1.0" encoding="UTF-8"?>

<rule name="appleFullRoute" run="true">
  <init>
    <rule name="addNodePoly">
    <parameters node="''"/>
    <init>
      pos[1] = 0.0
    </init>
    pos[0] = mapbase.node(node, 'x')
    pos[1] = mapbase.node(node, 'y')
    poly.addPoint('appleFullRoute', pos[0], pos[1])
    </rule>
  </init>
  # from apple_apple_graph
  # standard offset -708000.00E, -6174000.00N
  poly.del('appleFullRoute')
  addNodePoly("taastrup.appletrans_7-8N")
  addNodePoly("taastrup.applepath_9-10N")
  addNodePoly("taastrup.applepath_9-10S")
  addNodePoly("taastrup.appletrans_8-9S")
  addNodePoly("taastrup.applepath_6-7S")
  addNodePoly("taastrup.applepath_6-7N")
  addNodePoly("taastrup.appletrans_4-5N")
  addNodePoly("taastrup.applepath_3-4N")
  addNodePoly("taastrup.applepath_3-4S")
  addNodePoly("taastrup.appletrans_4-5S")
  addNodePoly("taastrup.applepath_7-8S")
  addNodePoly("taastrup.applepath_7-8N")
  addNodePoly("taastrup.appletrans_5-6N")
  addNodePoly("taastrup.applepath_4-5N")
  addNodePoly("taastrup.applepath_4-5S")
  addNodePoly("taastrup.appletrans_5-6S")
  addNodePoly("taastrup.applepath_8-9S")
  addNodePoly("taastrup.applepath_8-9N")
  addNodePoly("taastrup.appletrans_6-7N")
  addNodePoly("taastrup.applepath_5-6N")
  addNodePoly("taastrup.applepath_5-6S")
  addNodePoly("taastrup.appletrans_3-4S")
  addNodePoly("taastrup.applepath_2-3S")
  addNodePoly("taastrup.applepath_2-3N")
  poly.setRefCoord('appleFullRoute', 2) # map coordinate system
  poly.setOpen('appleFullRoute') # polyline
</rule>


<rule name="appleFull" run="false">
  <init>
    global.drive.compasHeading=false # means math heading (east is 0)
    global.drive.radians=false # means degrees
    global.drive.continueDist = 1.6 # meter, relaxed driving
    # global.drive.continueDist = 0 # meter, tight driving
  </init>
  missionStart("appleFull")
  smr.do('setvar "hakoliftinggearstateref" 130')
  # make obstacles smaller
  laser.send("var mapobst.marginSolidFactor=0.3")
  wait(3) : false
  global.drive.engineRPM = 1900;
  smr.do('setvar "hakoenginespeed" 1900') # RPM
  smr.speed = 0.7 # desired drive speed m/s (0.7m/s~2.5km/h)
  avoid.obstmindist=1.0
  #
  global.drive.holdLine=true
  smrctl.directOrWait = false
  driveNode("taastrup.appletrans_7-8N", 0)

  driveNode("taastrup.applepath_9-10N", 0)
  smrctl.directOrWait = true
  driveNode("taastrup.applepath_9-10S", 0)
  smrctl.directOrWait = false
  driveNode("taastrup.appletrans_8-9S", -180)

  driveNode("taastrup.applepath_6-7S", 180)
  smrctl.directOrWait = true
  driveNode("taastrup.applepath_6-7N", 180)
  smrctl.directOrWait = false
  driveNode("taastrup.appletrans_4-5N", 180)

  driveNode("taastrup.applepath_3-4N", 0)
  smrctl.directOrWait = true
  driveNode("taastrup.applepath_3-4S", 0)
  smrctl.directOrWait = false
  driveNode("taastrup.appletrans_4-5S", 0)

  driveNode("taastrup.applepath_7-8S", 180)
  smrctl.directOrWait = true
  driveNode("taastrup.applepath_7-8N", 180)
  smrctl.directOrWait = false
  driveNode("taastrup.appletrans_5-6N", -180)

  driveNode("taastrup.applepath_4-5N", 0)
  smrctl.directOrWait = true
  driveNode("taastrup.applepath_4-5S", 0)
  smrctl.directOrWait = false
  driveNode("taastrup.appletrans_5-6S", 0)

  driveNode("taastrup.applepath_8-9S", 180)
  smrctl.directOrWait = true
  driveNode("taastrup.applepath_8-9N", 180)
  smrctl.directOrWait = false
  driveNode("taastrup.appletrans_6-7N", 180)

  driveNode("taastrup.applepath_5-6N", 0)
  smrctl.directOrWait = true
  driveNode("taastrup.applepath_5-6S", 0)
  smrctl.directOrWait = false
  driveNode("taastrup.appletrans_3-4S", -180)

  driveNode("taastrup.applepath_2-3S", 180)
  smrctl.directOrWait = true
  driveNode("taastrup.applepath_2-3N", 180)
  smrctl.directOrWait = false
  #
  missionEnd()
  # wait a bit before saving the MRC log
  wait(2) : false
  <post>
    smr.saveMrcLog()
    print('finished appleFull')
  </post>
</rule>
