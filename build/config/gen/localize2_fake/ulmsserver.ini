# laser scanner server
;server imagepath="/rhome/demo/log2/laser"
;server datapath="/rhome/demo/log2/laser"
#
server imagepath="."
server datapath="."
server replayPath="log"
server port=24919
#
server serverlog
#
module load='var'
module load='imagepool'
module load='laserpool'
module load=v360
#
module load=odoPose
;odopose replay
module load=utmPose
module load=mapPose
var mappose.estimateVel=true
module load="aupoly.so.0"
module load="mapbase.so.0"
#mappose log
#
scanset devtype='fake' devname="urg"
; var laspool.dev0.poseErr="0.07 0.001 0.2 -0.001"
; var laspool.dev0.rangeSD=0.03
; var laspool.dev0.fakedt=0.1
scanset x=0.26 y=0.0 z=0.05
scanset mirror=false
scanset def=fake
var laspool.dev0.updatePose="1 1"
var laspool.dev0.poseerr="0.05, 0.05, 0.04, 0.02"
var laspool.dev0.rangeSD=0.03
; scanset devtype='sick' devname="/dev/ttyUSB0"
; ; scanset def=sick
; scanset devtype=replay devname="laser_0.log"
; scanset def=replay
; scanset res=0.5
# set scanner position in robot coordinates
; scanset x=0.43 y=0.0 z=0.43
; scanset mirror=false
;scanset logOpen
;scanset log=1
;scanset step
scanget
#
;
module load="ulmspassable.so.0"
var obst.outdoormode=0
var obst.obstGrpMaxDistance=2.0
var obst.obstGrpMaxTime=0.1
var pass.minObstDist = 0.3;
var obst.indoorCombineDist=0.06
var obst.obstmerge=false
var obst.obstCogMerge=true
var obst.cogMergeLimit = 2.0
; v360push i=1 cmd="pass obstonly makeonly"
module load="aulobst.so.0"
var lobst.ignoreIfFixed=true
var lobst.splitdist=0.5
;
module load="aurule.so.0"
rule step=0
;rule load="./mapPose.rule"
#
#mapbase mapload="./apple_cherry_map.xml"
#mapbase graphload="./apple_cherry_graph.xml"
; rule load="./building97.rule"
; rule load="./buildingFuel.rule"
; rule load="./buildingChimney.rule"
; rule load="./buildingHans.rule"
; rule load="./buildingGreenhouseSouth.rule"
; rule load="./buildingSouthSmall.rule"
; rule load="./agrovejEastFence.rule"
; rule load="./alleSouth.rule"
; rule load="./alleNorth.rule"
#
# load module to utilize mapped obstacles
module load="aumapobst.so.0"
var mapobst.marginSolidFactor=0.3
var mapobst.marginFluffyFactor = 1.1
# and locater relative to mapped lines
; module load=aulaserbox.so.0
; laserbox add=abc x1=1.1 y1=2.2 x2=3.3 y2=4.4
; laserbox add=xyz x1=1 y1=0 x2=3 y2=-4
; laserbox detect
; scanpush cmd="laserbox detect"
module load="aulocalize2.so.0"
# add map to localizer
loca addline polyline=mapWall*
loca setinitpose x=0.1 y=0.1 th=0.030
loca setinitcov Cx=0.08 Cy=0.08 Cth=0.08
var loca.noCorrMaha=1.01
var loca.sdmRight=0.25
var loca.sdmLeft=0.25
var loca.minOverlap=0.10
scanpush i=1 cmd="lobst make obst silent"
varpush struct=lobst cmd="loca localize silent" i=5
# after localization make 
#varpush struct=loca cmd="obst makeonly polyupdate"
#scanget



