# laser scanner server
;server imagepath="/rhome/demo/log2/laser"
;server datapath="/rhome/demo/log2/laser"
#
server imagepath="/home/chr/chr/results"
server datapath="/home/chr/chr/results"
server replayPath="/home/chr/replay/mmr20100219/log"
server port=24919
#
server serverlog
#
module load='var'
module load='imagepool'
# for uservermoduletester - not for ulmsserver
#module load='laserpool'
#module load=v360
#
module load=odoPose
odopose replay
module load=utmPose
module load=mapPose
var mappose.estimateVel=true
#mappose log
#
scanset devtype='sick' devname="/dev/ttyUSB0"
scanset def=sick
scanset devtype=replay devname="laser_0.log"
scanset def=replay
scanset res=0.5
# set scanner position in robot coordinates
scanset x=0.43.07 y=0.0 z=0.43
scanset mirror=false
;scanset logOpen
;scanset log=1
scanset step
#
# interface to nav server (for odometry and utmpose)
module load=if alias=nav
nav add=var
nav replay
; navOnConnect cmd="nav odoPosePush flush"
; navOnConnect cmd="nav odoPosePush cmd='odopose pose'"
; navOnConnect cmd="nav utmPosePush flush"
; navOnConnect cmd="nav utmPosePush cmd='utmpose pose'"
nav connect=localhost:24922

module load=if alias=cam
cam connect=localhost:24920
cam replay
;
module load="ulmspassable.so.0"
var obst.outdoormode=0
var obst.obstGrpMaxDistance=2.0
var obst.obstGrpMaxTime=0.1
var pass.minObstDist = 0.3;
var obst.indoorCombineDist=0.06
var obst.obstmerge=false
var obst.obstCogMerge=true
var obst.cogMergeLimit = 2.0
; v360push i=1 cmd="pass obstonly makeonly"
module load="aulobst.so.0"
;
module load="aurule.so.0"
rule step=0
rule load="./mapPose.rule"
#
module load="aupoly.so.0"
module load="mapbase.so.0"
mapbase mapload="./apple_cherry_map.xml"
mapbase graphload="./apple_cherry_graph.xml"
rule load="./building97.rule"
rule load="./buildingFuel.rule"
rule load="./buildingChimney.rule"
rule load="./buildingHans.rule"
rule load="./buildingGreenhouseSouth.rule"
rule load="./buildingSouthSmall.rule"
rule load="./agrovejEastFence.rule"
rule load="./alleSouth.rule"
rule load="./alleNorth.rule"

#
# load module to utilize mapped obstacles
module load="aumapobst.so.0"
var mapobst.marginSolidFactor=0.3
var mapobst.marginFluffyFactor = 1.1
# and locater relative to mapped lines
; module load="locater.so.0"
; ;push t=60 cmd="var call="locater.resetstate()"
; ;push t=60 cmd="var locater.updcnt=5"
; var locater.useRowEnd=1
; var locater.rowEndIn1=4.5
; var locater.rowEndIn2=2.5
; var locater.rowEndMaxGap=2.8
; var locater.useAvgUpdate=1
; var locater.rowEndMinCover=0.33
; var locater.rowEndMaxDist=6.5
; locater openlog
; var call="locater.resetstate()"
scanpush cmd="v360 update"
#v360push cmd="locater locate"
#scanpush cmd="locater locate"
#utmPosePush cmd="locater utmToMap"
;
v360push cmd="lobst make obst"
#
module load="aulocalize.so.0"
resetlocalizer
odoposepush cmd="odoposeupdate"
setinitpose x=0 y=0 th=0
setinitcov Cx=2 Cy=2 Cth=1
addline alpha=-0.41 r=2
addline alpha=-0.41 r=2.61
addline alpha=1.16 r=7
localize
#
rule resume
rule log

